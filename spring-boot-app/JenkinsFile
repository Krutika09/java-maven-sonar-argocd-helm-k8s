pipeline {
    agent any

    tools {
        maven 'maven-3.9.7'  // Ensure this matches your Jenkins Maven install name
    }

    environment {
        SONARQUBE = 'MySonarQubeServer' // Name in Jenkins > Manage Jenkins > Configure System
        SONAR_TOKEN = credentials('sonar-token') // Jenkins credential ID for Sonar user token
        IMAGE_NAME = 'springboot-app'
        IMAGE_TAG = 'v1'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Code checked out'
                sh 'echo === WORKSPACE CONTENT ==='
                sh 'ls -R'
            }
        }

        stage('Build and Test') {
            steps {
                dir('spring-boot-app') {
                    echo 'Building with Maven...'
                    sh 'mvn clean install'
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                dir('spring-boot-app') {
                    withSonarQubeEnv("${SONARQUBE}") {
                        sh "mvn sonar:sonar -Dsonar.login=${SONAR_TOKEN}"
                    }
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                dir('spring-boot-app') {
                    script {
                        sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
                        // Optional: Add Docker push command if using DockerHub
                        // sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} <your-dockerhub-username>/${IMAGE_NAME}:${IMAGE_TAG}"
                        // sh "docker push <your-dockerhub-username>/${IMAGE_NAME}:${IMAGE_TAG}"
                    }
                }
            }
        }

        stage('Check Docker') {
            steps {
                sh 'docker images'
            }
        }

        stage('Update Deployment File') {
            steps {
                dir('spring-boot-app-manifests') {
                    script {
                        sh "sed -i 's|image:.*|image: ${IMAGE_NAME}:${IMAGE_TAG}|' deployment.yml"
                    }
                }
            }
        }
    }
}
