pipeline {
    agent any

    tools {
        maven 'maven-3.9.7'
    }

    environment {
        IMAGE_NAME = 'springboot-app'
        IMAGE_TAG = 'v1'
        DOCKER_REPO = 'your-dockerhub-username/springboot-app'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Code checked out'
                sh 'ls -R'
            }
        }

        stage('Build and Test') {
            steps {
                dir('spring-boot-app') {
                    sh 'mvn clean install'
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                dir('spring-boot-app') {
                    sh 'mvn sonar:sonar -Dsonar.projectKey=my-app -Dsonar.host.url=http://localhost:9000 -Dsonar.login=admin -Dsonar.password=admin'
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                dir('spring-boot-app') {
                    sh 'docker build -t $DOCKER_REPO:$IMAGE_TAG .'
                    sh 'docker push $DOCKER_REPO:$IMAGE_TAG'
                }
            }
        }

        stage('Check Docker') {
            steps {
                sh 'docker images'
            }
        }

        stage('Update Deployment File') {
            steps {
                dir('spring-boot-app-manifests') {
                    sh '''
                    sed -i "s|image:.*|image: $DOCKER_REPO:$IMAGE_TAG|" deployment.yml
                    cat deployment.yml
                    '''
                }
            }
        }
    }
}
